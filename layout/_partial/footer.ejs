

<!-- 回到顶端 -->

<div class="go-top" id="go-top">
  <a href="#" class="go icon-up-open" aria-label="返回顶部"></a>
</div>

<!-- AOS -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    AOS.init({
      duration: 600,
      delay: 0,
    });
  });
</script>

<!-- Highlight -->
<script>
  document.addEventListener('DOMContentLoaded', () => {
    // 确保代码块高亮
    document.querySelectorAll('pre code').forEach((block) => {
      hljs.highlightElement(block);

      // 显示行号
      <% if (theme.codeBlock.showLineNumbers) { %>
        addLineNumber(block);
      <% } %>
    });

    // 显示复制按钮
    <% if (theme.codeBlock.showCopyButton) { %>
      addCopyButtons();
    <% } %>
  });

  // 添加行号函数
  function addLineNumber(codeDom) {
    codeDom.classList.add("code-block-extension-code-show-num");
    const codeHtml = codeDom.innerHTML;
      const codeHtmllines = codeHtml.split("\n").length;
    const lines = codeHtml.split("\n").map((line, index) => {
      if (index === codeHtmllines - 1) return line; // 不处理最后一个行，因为不知为什么会莫名其妙地加多一行空行
      return `<span class="code-block-extension-code-line" data-line-num="${index + 1}">${line}</span>`;
    }).join("\n");
    codeDom.innerHTML = lines;
  }

  // 添加复制按钮函数
  function addCopyButtons() {
    document.querySelectorAll('pre code').forEach((codeBlock) => {
      const button = document.createElement('button');
      button.className = 'copy-button';
      button.innerText = 'Copy';
      codeBlock.parentElement.appendChild(button);
    });

    document.addEventListener('click', handleButtonClick);
  }

  async function handleButtonClick(event) {
    if (!event.target.matches('.copy-button')) return;

    event.preventDefault();
    const button = event.target;
    const codeBlock = button.previousElementSibling;
    const code = codeBlock.textContent;
    const scrollY = window.scrollY;

    try {
      if (navigator.clipboard && window.isSecureContext) {
        await navigator.clipboard.writeText(code);
      } else {
        const textArea = document.createElement('textarea');
        textArea.value = code;
        textArea.style.position = 'fixed';
        textArea.style.top = '0';
        textArea.style.left = '-9999px';
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
      }
      button.innerText = 'Copied!';
    } catch (err) {
      console.error('复制文本失败:', err);
      alert('复制文本失败，请重试。');
    }

    window.scrollTo(0, scrollY);

    setTimeout(() => {
      button.innerText = 'Copy';
    }, 2000);
  }
  <% if (isEncryptInstalled()) { %>
    window.addEventListener('hexo-blog-decrypt', 
    function() {
      try {
        runShortcodes();
      } catch (error) {
        if (error.message != "runShortcodes is not defined") {
          throw error;
        }
      }
    });
  <% } %>
</script>

<!-- 后台script标签 -->
<% if (theme.footer_script) { %>
  <script>
    <%- theme.footer_script %>
  </script>
<% } %>
</body>

</html>